"use strict";$(function(){var e=$("select#type");e.on({change:function(){var e=$(this).val();$(".field-settings[data-type="+e+"]").show().siblings().hide()}}),e.trigger("change");var t=$("table.value-group");t.each(function(){var e=new Craft.DataTableSorter($(this),{helperClass:"editabletablesorthelper",copyDraggeeInputValuesToHelper:!0});$(this).data("sorter",e)});var a=$("input[name$='[customValues]']").parents(".lightswitch");a.on({change:function(){var e=$("input",this).val();e?t.filter(":not([data-type='dynamic_recipients'])").removeClass("hide-custom-values"):t.filter(":not([data-type='dynamic_recipients'])").addClass("hide-custom-values")}}),a.trigger("change"),$(".value-group + .btn.add").on({click:function(){var e=$(this).prev("table.value-group"),t=e.data("type"),a=$("<tr>").append($("<td>",{"class":"textual field-label"}).append($("<textarea>",{val:"",rows:1,name:"types["+t+"][labels][]"}))).append($("<td>",{"class":"textual field-value"}).append($("<textarea>",{val:"",rows:1,"class":"code",name:"types["+t+"][values][]"}))).append($("<td>").append($("<input>",{type:"hidden",value:0,"class":"code",name:"types["+t+"][checked][]"})).append($("<input>",{type:"checkbox_group"===t?"checkbox":"radio",name:t+"_is_checked",checked:!1}))).append($("<td>",{"class":"thin action"}).append($("<a>",{"class":"move icon",title:Craft.t("Reorder")}))).append($("<td>",{"class":"thin action"}).append($("<a>",{"class":"delete icon",title:Craft.t("Delete")})));$("tbody",e).append(a),e.find("tbody > tr:last > td:first textarea:first").focus(),e.data("sorter").addItems(a)}}),t.on({click:function(){$(this).parents("tr:first").remove()}},"tr td.action .icon.delete").on({keyup:function(e){if(9===e.which||9===e.keyCode)return!1;var t=$(this).val(),a=$(this).parents("tr:first");$("td.field-value > textarea",a).val(t)}},"td.field-label > textarea").on({click:function(){var e=$(this).parents("tbody:first"),t=$(this).is(":checked"),a=$(this).is(":radio");a&&t&&$("input:hidden",e).val(0),$(this).siblings("input:hidden").val(t?1:0)}},"input:checkbox, input:radio");var i=$("#dateTimeTypeSelector");i.on({change:function(){var e=$(this).val(),t=$("#date-time-date"),a=$("#date-time-clock");switch(e){case"date":t.show(),a.hide();break;case"time":t.hide(),a.show();break;default:t.show(),a.show()}}}),i.trigger("change")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpZWxkRWRpdG9yLmpzIl0sIm5hbWVzIjpbIiQiLCIkdHlwZVNlbGVjdCIsIm9uIiwiY2hhbmdlIiwidHlwZSIsInRoaXMiLCJ2YWwiLCJzaG93Iiwic2libGluZ3MiLCJoaWRlIiwidHJpZ2dlciIsIiR0YWJsZSIsImVhY2giLCIkc29ydGVyIiwiQ3JhZnQiLCJEYXRhVGFibGVTb3J0ZXIiLCJoZWxwZXJDbGFzcyIsImNvcHlEcmFnZ2VlSW5wdXRWYWx1ZXNUb0hlbHBlciIsImRhdGEiLCIkY3VzdG9tVmFsdWVTd2l0Y2giLCJwYXJlbnRzIiwiaXNPbiIsImZpbHRlciIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJjbGljayIsIiRwYXJlbnRUYWJsZSIsInByZXYiLCIkdHIiLCJhcHBlbmQiLCJjbGFzcyIsInJvd3MiLCJuYW1lIiwidmFsdWUiLCJjaGVja2VkIiwidGl0bGUiLCJ0IiwiZmluZCIsImZvY3VzIiwiYWRkSXRlbXMiLCJyZW1vdmUiLCJrZXl1cCIsImV2ZW50Iiwid2hpY2giLCJrZXlDb2RlIiwiJHZhbCIsIiR0Ym9keSIsImlzQ2hlY2tlZCIsImlzIiwiaXNSYWRpbyIsIiRkYXRlVGltZVR5cGVTZWxlY3RvciIsImRhdGUiLCJjbG9jayJdLCJtYXBwaW5ncyI6IkFBQUEsWUFVQUEsR0FBRSxXQUNBLEdBQU1DLEdBQWNELEVBQUUsY0FFdEJDLEdBQVlDLElBQ1ZDLE9BQVEsV0FDTixHQUFNQyxHQUFPSixFQUFFSyxNQUFNQyxLQUVyQk4sR0FBRSw2QkFBK0JJLEVBQU8sS0FDckNHLE9BQ0FDLFdBQ0FDLFVBR1BSLEVBQVlTLFFBQVEsU0FFcEIsSUFBTUMsR0FBU1gsRUFBRSxvQkFDakJXLEdBQU9DLEtBQUssV0FDVixHQUFNQyxHQUFVLEdBQUlDLE9BQU1DLGdCQUFnQmYsRUFBRUssT0FDMUNXLFlBQWEsMEJBQ2JDLGdDQUFnQyxHQUdsQ2pCLEdBQUVLLE1BQU1hLEtBQUssU0FBVUwsSUFHekIsSUFBTU0sR0FBcUJuQixFQUFFLGlDQUFpQ29CLFFBQVEsZUFDdEVELEdBQW1CakIsSUFDakJDLE9BQVEsV0FDTixHQUFNa0IsR0FBT3JCLEVBQUUsUUFBU0ssTUFBTUMsS0FDMUJlLEdBQ0ZWLEVBQU9XLE9BQU8sMENBQTBDQyxZQUFZLHNCQUVwRVosRUFBT1csT0FBTywwQ0FBMENFLFNBQVMseUJBSXZFTCxFQUFtQlQsUUFBUSxVQUUzQlYsRUFBRSwyQkFBMkJFLElBQzNCdUIsTUFBTyxXQUNMLEdBQU1DLEdBQWUxQixFQUFFSyxNQUFNc0IsS0FBSyxxQkFDNUJ2QixFQUFlc0IsRUFBYVIsS0FBSyxRQUVqQ1UsRUFBTTVCLEVBQUUsUUFDWDZCLE9BQ0M3QixFQUFFLFFBQVM4QixRQUFPLHdCQUNmRCxPQUNDN0IsRUFBRSxjQUNBTSxJQUFLLEdBQ0x5QixLQUFNLEVBQ05DLEtBQU0sU0FBVzVCLEVBQU8sa0JBSS9CeUIsT0FDQzdCLEVBQUUsUUFBUzhCLFFBQU8sd0JBQ2ZELE9BQ0M3QixFQUFFLGNBQ0FNLElBQUssR0FDTHlCLEtBQU0sRUFDTkQsUUFBTyxPQUNQRSxLQUFNLFNBQVc1QixFQUFPLGtCQUkvQnlCLE9BQ0M3QixFQUFFLFFBQ0M2QixPQUNDN0IsRUFBRSxXQUNBSSxLQUFNLFNBQ042QixNQUFPLEVBQ1BILFFBQU8sT0FDUEUsS0FBTSxTQUFXNUIsRUFBTyxrQkFHM0J5QixPQUNDN0IsRUFBRSxXQUNBSSxLQUFlLG1CQUFUQSxFQUE0QixXQUFhLFFBQy9DNEIsS0FBTTVCLEVBQU8sY0FDYjhCLFNBQVMsTUFJaEJMLE9BQ0M3QixFQUFFLFFBQVM4QixRQUFPLGdCQUNmRCxPQUNDN0IsRUFBRSxPQUNBOEIsUUFBTyxZQUNQSyxNQUFPckIsTUFBTXNCLEVBQUUsZUFJdEJQLE9BQ0M3QixFQUFFLFFBQVM4QixRQUFPLGdCQUNmRCxPQUNDN0IsRUFBRSxPQUNBOEIsUUFBTyxjQUNQSyxNQUFPckIsTUFBTXNCLEVBQUUsYUFLekJwQyxHQUFFLFFBQVMwQixHQUFjRyxPQUFPRCxHQUNoQ0YsRUFBYVcsS0FBSyw2Q0FBNkNDLFFBRS9EWixFQUFhUixLQUFLLFVBQVVxQixTQUFTWCxNQUl6Q2pCLEVBQ0dULElBQ0N1QixNQUFPLFdBQ0x6QixFQUFFSyxNQUFNZSxRQUFRLFlBQVlvQixXQUU3Qiw2QkFDRnRDLElBQ0N1QyxNQUFPLFNBQVVDLEdBQ2YsR0FBb0IsSUFBaEJBLEVBQU1DLE9BQWlDLElBQWxCRCxFQUFNRSxRQUM3QixPQUFPLENBR1QsSUFBTUMsR0FBTzdDLEVBQUVLLE1BQU1DLE1BQ2ZzQixFQUFPNUIsRUFBRUssTUFBTWUsUUFBUSxXQUU3QnBCLEdBQUUsNEJBQTZCNEIsR0FBS3RCLElBQUl1QyxLQUV6Qyw2QkFDRjNDLElBQ0N1QixNQUFPLFdBQ0wsR0FBTXFCLEdBQVk5QyxFQUFFSyxNQUFNZSxRQUFRLGVBQzVCMkIsRUFBWS9DLEVBQUVLLE1BQU0yQyxHQUFHLFlBQ3ZCQyxFQUFZakQsRUFBRUssTUFBTTJDLEdBQUcsU0FFekJDLElBQVdGLEdBQ2IvQyxFQUFFLGVBQWdCOEMsR0FBUXhDLElBQUksR0FHaENOLEVBQUVLLE1BQU1HLFNBQVMsZ0JBQWdCRixJQUFJeUMsRUFBWSxFQUFJLEtBRXRELDhCQUdMLElBQU1HLEdBQXdCbEQsRUFBRSx3QkFDaENrRCxHQUFzQmhELElBQ3BCQyxPQUFRLFdBQ04sR0FBTUcsR0FBTU4sRUFBRUssTUFBTUMsTUFDZDZDLEVBQU9uRCxFQUFFLG1CQUNUb0QsRUFBUXBELEVBQUUsbUJBRWhCLFFBQVFNLEdBQ04sSUFBSyxPQUNINkMsRUFBSzVDLE9BQ0w2QyxFQUFNM0MsTUFDTixNQUVGLEtBQUssT0FDSDBDLEVBQUsxQyxPQUNMMkMsRUFBTTdDLE1BQ04sTUFFRixTQUNFNEMsRUFBSzVDLE9BQ0w2QyxFQUFNN0MsV0FNZDJDLEVBQXNCeEMsUUFBUSIsImZpbGUiOiJmaWVsZEVkaXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBGcmVlZm9ybSBmb3IgQ3JhZnRcbiAqXG4gKiBAcGFja2FnZSAgICAgICBTb2xzcGFjZTpGcmVlZm9ybVxuICogQGF1dGhvciAgICAgICAgU29sc3BhY2UsIEluYy5cbiAqIEBjb3B5cmlnaHQgICAgIENvcHlyaWdodCAoYykgMjAwOC0yMDE2LCBTb2xzcGFjZSwgSW5jLlxuICogQGxpbmsgICAgICAgICAgaHR0cHM6Ly9zb2xzcGFjZS5jb20vY3JhZnQvZnJlZWZvcm1cbiAqIEBsaWNlbnNlICAgICAgIGh0dHBzOi8vc29sc3BhY2UuY29tL3NvZnR3YXJlL2xpY2Vuc2UtYWdyZWVtZW50XG4gKi9cblxuJChmdW5jdGlvbiAoKSB7XG4gIGNvbnN0ICR0eXBlU2VsZWN0ID0gJChcInNlbGVjdCN0eXBlXCIpO1xuXG4gICR0eXBlU2VsZWN0Lm9uKHtcbiAgICBjaGFuZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0IHR5cGUgPSAkKHRoaXMpLnZhbCgpO1xuXG4gICAgICAkKFwiLmZpZWxkLXNldHRpbmdzW2RhdGEtdHlwZT1cIiArIHR5cGUgKyBcIl1cIilcbiAgICAgICAgLnNob3coKVxuICAgICAgICAuc2libGluZ3MoKVxuICAgICAgICAuaGlkZSgpO1xuICAgIH1cbiAgfSk7XG4gICR0eXBlU2VsZWN0LnRyaWdnZXIoXCJjaGFuZ2VcIik7XG5cbiAgY29uc3QgJHRhYmxlID0gJChcInRhYmxlLnZhbHVlLWdyb3VwXCIpO1xuICAkdGFibGUuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgJHNvcnRlciA9IG5ldyBDcmFmdC5EYXRhVGFibGVTb3J0ZXIoJCh0aGlzKSwge1xuICAgICAgaGVscGVyQ2xhc3M6ICdlZGl0YWJsZXRhYmxlc29ydGhlbHBlcicsXG4gICAgICBjb3B5RHJhZ2dlZUlucHV0VmFsdWVzVG9IZWxwZXI6IHRydWVcbiAgICB9KTtcblxuICAgICQodGhpcykuZGF0YShcInNvcnRlclwiLCAkc29ydGVyKTtcbiAgfSk7XG5cbiAgY29uc3QgJGN1c3RvbVZhbHVlU3dpdGNoID0gJChcImlucHV0W25hbWUkPSdbY3VzdG9tVmFsdWVzXSddXCIpLnBhcmVudHMoXCIubGlnaHRzd2l0Y2hcIik7XG4gICRjdXN0b21WYWx1ZVN3aXRjaC5vbih7XG4gICAgY2hhbmdlOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBpc09uID0gJCgnaW5wdXQnLCB0aGlzKS52YWwoKTtcbiAgICAgIGlmIChpc09uKSB7XG4gICAgICAgICR0YWJsZS5maWx0ZXIoXCI6bm90KFtkYXRhLXR5cGU9J2R5bmFtaWNfcmVjaXBpZW50cyddKVwiKS5yZW1vdmVDbGFzcyhcImhpZGUtY3VzdG9tLXZhbHVlc1wiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICR0YWJsZS5maWx0ZXIoXCI6bm90KFtkYXRhLXR5cGU9J2R5bmFtaWNfcmVjaXBpZW50cyddKVwiKS5hZGRDbGFzcyhcImhpZGUtY3VzdG9tLXZhbHVlc1wiKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICAkY3VzdG9tVmFsdWVTd2l0Y2gudHJpZ2dlcihcImNoYW5nZVwiKTtcblxuICAkKFwiLnZhbHVlLWdyb3VwICsgLmJ0bi5hZGRcIikub24oe1xuICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCAkcGFyZW50VGFibGUgPSAkKHRoaXMpLnByZXYoXCJ0YWJsZS52YWx1ZS1ncm91cFwiKTtcbiAgICAgIGNvbnN0IHR5cGUgICAgICAgICA9ICRwYXJlbnRUYWJsZS5kYXRhKFwidHlwZVwiKTtcblxuICAgICAgY29uc3QgJHRyID0gJChcIjx0cj5cIilcbiAgICAgICAgLmFwcGVuZChcbiAgICAgICAgICAkKFwiPHRkPlwiLCB7Y2xhc3M6IFwidGV4dHVhbCBmaWVsZC1sYWJlbFwifSlcbiAgICAgICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgICAgICQoXCI8dGV4dGFyZWE+XCIsIHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiXCIsXG4gICAgICAgICAgICAgICAgcm93czogMSxcbiAgICAgICAgICAgICAgICBuYW1lOiBcInR5cGVzW1wiICsgdHlwZSArIFwiXVtsYWJlbHNdW11cIixcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgICAuYXBwZW5kKFxuICAgICAgICAgICQoXCI8dGQ+XCIsIHtjbGFzczogXCJ0ZXh0dWFsIGZpZWxkLXZhbHVlXCJ9KVxuICAgICAgICAgICAgLmFwcGVuZChcbiAgICAgICAgICAgICAgJChcIjx0ZXh0YXJlYT5cIiwge1xuICAgICAgICAgICAgICAgIHZhbDogXCJcIixcbiAgICAgICAgICAgICAgICByb3dzOiAxLFxuICAgICAgICAgICAgICAgIGNsYXNzOiBcImNvZGVcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInR5cGVzW1wiICsgdHlwZSArIFwiXVt2YWx1ZXNdW11cIixcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgICAuYXBwZW5kKFxuICAgICAgICAgICQoXCI8dGQ+XCIpXG4gICAgICAgICAgICAuYXBwZW5kKFxuICAgICAgICAgICAgICAkKFwiPGlucHV0PlwiLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJoaWRkZW5cIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogMCxcbiAgICAgICAgICAgICAgICBjbGFzczogXCJjb2RlXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlc1tcIiArIHR5cGUgKyBcIl1bY2hlY2tlZF1bXVwiLFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmFwcGVuZChcbiAgICAgICAgICAgICAgJChcIjxpbnB1dD5cIiwge1xuICAgICAgICAgICAgICAgIHR5cGU6IHR5cGUgPT09IFwiY2hlY2tib3hfZ3JvdXBcIiA/IFwiY2hlY2tib3hcIiA6IFwicmFkaW9cIixcbiAgICAgICAgICAgICAgICBuYW1lOiB0eXBlICsgXCJfaXNfY2hlY2tlZFwiLFxuICAgICAgICAgICAgICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgJChcIjx0ZD5cIiwge2NsYXNzOiBcInRoaW4gYWN0aW9uXCJ9KVxuICAgICAgICAgICAgLmFwcGVuZChcbiAgICAgICAgICAgICAgJChcIjxhPlwiLCB7XG4gICAgICAgICAgICAgICAgY2xhc3M6IFwibW92ZSBpY29uXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IENyYWZ0LnQoXCJSZW9yZGVyXCIpLFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgICAgIC5hcHBlbmQoXG4gICAgICAgICAgJChcIjx0ZD5cIiwge2NsYXNzOiBcInRoaW4gYWN0aW9uXCJ9KVxuICAgICAgICAgICAgLmFwcGVuZChcbiAgICAgICAgICAgICAgJChcIjxhPlwiLCB7XG4gICAgICAgICAgICAgICAgY2xhc3M6IFwiZGVsZXRlIGljb25cIixcbiAgICAgICAgICAgICAgICB0aXRsZTogQ3JhZnQudChcIkRlbGV0ZVwiKSxcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgKTtcblxuICAgICAgJChcInRib2R5XCIsICRwYXJlbnRUYWJsZSkuYXBwZW5kKCR0cik7XG4gICAgICAkcGFyZW50VGFibGUuZmluZChcInRib2R5ID4gdHI6bGFzdCA+IHRkOmZpcnN0IHRleHRhcmVhOmZpcnN0XCIpLmZvY3VzKCk7XG5cbiAgICAgICRwYXJlbnRUYWJsZS5kYXRhKFwic29ydGVyXCIpLmFkZEl0ZW1zKCR0cik7XG4gICAgfVxuICB9KTtcblxuICAkdGFibGVcbiAgICAub24oe1xuICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJCh0aGlzKS5wYXJlbnRzKFwidHI6Zmlyc3RcIikucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfSwgXCJ0ciB0ZC5hY3Rpb24gLmljb24uZGVsZXRlXCIpXG4gICAgLm9uKHtcbiAgICAgIGtleXVwOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LndoaWNoID09PSA5IHx8IGV2ZW50LmtleUNvZGUgPT09IDkpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCAkdmFsID0gJCh0aGlzKS52YWwoKTtcbiAgICAgICAgY29uc3QgJHRyICA9ICQodGhpcykucGFyZW50cyhcInRyOmZpcnN0XCIpO1xuXG4gICAgICAgICQoXCJ0ZC5maWVsZC12YWx1ZSA+IHRleHRhcmVhXCIsICR0cikudmFsKCR2YWwpO1xuICAgICAgfVxuICAgIH0sIFwidGQuZmllbGQtbGFiZWwgPiB0ZXh0YXJlYVwiKVxuICAgIC5vbih7XG4gICAgICBjbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCAkdGJvZHkgICAgPSAkKHRoaXMpLnBhcmVudHMoXCJ0Ym9keTpmaXJzdFwiKTtcbiAgICAgICAgY29uc3QgaXNDaGVja2VkID0gJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpO1xuICAgICAgICBjb25zdCBpc1JhZGlvICAgPSAkKHRoaXMpLmlzKFwiOnJhZGlvXCIpO1xuXG4gICAgICAgIGlmIChpc1JhZGlvICYmIGlzQ2hlY2tlZCkge1xuICAgICAgICAgICQoXCJpbnB1dDpoaWRkZW5cIiwgJHRib2R5KS52YWwoMCk7XG4gICAgICAgIH1cblxuICAgICAgICAkKHRoaXMpLnNpYmxpbmdzKFwiaW5wdXQ6aGlkZGVuXCIpLnZhbChpc0NoZWNrZWQgPyAxIDogMCk7XG4gICAgICB9XG4gICAgfSwgXCJpbnB1dDpjaGVja2JveCwgaW5wdXQ6cmFkaW9cIik7XG5cblxuICBjb25zdCAkZGF0ZVRpbWVUeXBlU2VsZWN0b3IgPSAkKFwiI2RhdGVUaW1lVHlwZVNlbGVjdG9yXCIpO1xuICAkZGF0ZVRpbWVUeXBlU2VsZWN0b3Iub24oe1xuICAgIGNoYW5nZTogZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3QgdmFsID0gJCh0aGlzKS52YWwoKTtcbiAgICAgIGNvbnN0IGRhdGUgPSAkKCcjZGF0ZS10aW1lLWRhdGUnKTtcbiAgICAgIGNvbnN0IGNsb2NrID0gJCgnI2RhdGUtdGltZS1jbG9jaycpO1xuXG4gICAgICBzd2l0Y2ggKHZhbCkge1xuICAgICAgICBjYXNlICdkYXRlJzpcbiAgICAgICAgICBkYXRlLnNob3coKTtcbiAgICAgICAgICBjbG9jay5oaWRlKCk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAndGltZSc6XG4gICAgICAgICAgZGF0ZS5oaWRlKCk7XG4gICAgICAgICAgY2xvY2suc2hvdygpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgZGF0ZS5zaG93KCk7XG4gICAgICAgICAgY2xvY2suc2hvdygpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgJGRhdGVUaW1lVHlwZVNlbGVjdG9yLnRyaWdnZXIoJ2NoYW5nZScpO1xufSk7XG4iXX0=
